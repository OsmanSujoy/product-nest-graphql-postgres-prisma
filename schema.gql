# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: ID!
  categoryName: ID!
  product: [Product!]
  createdBy: User!
  updatedBy: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Product {
  id: ID!
  productName: String!
  productDescription: String!
  productStock: Float!
  productPrice: Float!
  category: Category!
  createdBy: User!
  updatedBy: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Cart {
  id: ID!
  quantity: Float!
  subTotal: Float!
  cartedBy: User!
  product: Product!
  order: Order
  status: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Order {
  id: ID!
  status: String!
  orderedBy: User!
  orderedItem: [Cart!]!
  totalPayment: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: ID!
  username: ID!
  email: ID!
  roles: [String!]!
  createdProducts: [Product!]!
  updatedProducts: [Product!]!
  createdOrders: [Order!]!
  createdCarts: [Cart!]!
}

type Message {
  message: String!
}

type Query {
  me: User!
  findUsers(input: UsersListInput!): [User!]!
  findUser(input: UserWhereUniqueInput!): User!
  findProducts(input: ProductsListInput!): [Product!]!
  findProduct(input: ProductWhereUniqueInput!): Product!
  findCategories(input: CategoriesListInput!): [Category!]!
  findCategory(input: CategoryWhereUniqueInput!): Category!
  findOrders(input: OrdersListInput!): [Order!]!
  findOrder(input: OrderWhereUniqueInput!): Order!
  listOrders(input: OrdersListInput!): [Order!]!
  findCart(input: CartWhereUniqueInput!): Cart!
  findCarts(input: CartsListInput!): [Cart!]!
  findCartsAdmin(input: CartsListInput!): [Cart!]!
}

input UsersListInput {
  skip: Float
  take: Float
  cursor: JSON
  where: JSON
  orderBy: JSON
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input UserWhereUniqueInput {
  id: ID
  username: ID
  email: ID
}

input ProductsListInput {
  skip: Float
  take: Float
  cursor: JSON
  where: JSON
  orderBy: JSON
}

input ProductWhereUniqueInput {
  id: ID
}

input CategoriesListInput {
  skip: Float
  take: Float
  cursor: JSON
  where: JSON
  orderBy: JSON
}

input CategoryWhereUniqueInput {
  id: ID
}

input OrdersListInput {
  skip: Float
  take: Float
  cursor: JSON
  where: JSON
  orderBy: JSON
}

input OrderWhereUniqueInput {
  id: ID
}

input CartWhereUniqueInput {
  id: ID
}

input CartsListInput {
  skip: Float
  take: Float
  cursor: JSON
  where: JSON
  orderBy: JSON
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  updateUserRole(input: UpdateRoleUserInput!): User!
  deleteUser(input: UserWhereUniqueInput!): Message!
  login(input: LoginUserInput!): String!
  createProduct(input: CreateProductInput!): Product!
  updateProduct(input: UpdateProductInput!): Product!
  deleteProduct(input: ProductWhereUniqueInput!): Message!
  createCategory(input: CreateCategoryInput!): Category!
  updateCategory(input: UpdateCategoryInput!): Category!
  deleteCategory(input: CategoryWhereUniqueInput!): Message!
  createOrder: Order!
  updateOrder(input: UpdateOrderInput!): Order!
  deleteOrder(input: OrderWhereUniqueInput!): Message!
  createUpdateCart(input: CreateUpdateCartInput!): Cart!
  updateCart(input: UpdateCartInput!): Cart!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  password: String!
}

input UpdateRoleUserInput {
  id: ID
  username: ID
  email: ID
  roles: String!
}

input LoginUserInput {
  usernameOrEmail: String!
  password: String!
}

input CreateProductInput {
  productName: String!
  productDescription: String!
  productStock: Float!
  productPrice: Float!
  category: String!
}

input UpdateProductInput {
  id: String!
  productName: String
  productDescription: String
  productPrice: Float!
}

input CreateCategoryInput {
  categoryName: ID!
}

input UpdateCategoryInput {
  id: ID
  categoryName: String!
}

input UpdateOrderInput {
  id: ID!
  status: String!
}

input CreateUpdateCartInput {
  quantity: Float!
  product: String!
}

input UpdateCartInput {
  id: ID!
  quantity: Float!
}